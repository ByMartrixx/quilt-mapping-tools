buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.jetbrains.intellij.plugins:gradle-grammarkit-plugin:2021.2.2"
	}
}

plugins {
	id "org.jetbrains.intellij" version "1.9.0"
}

apply plugin: "java"
apply plugin: "org.jetbrains.grammarkit"

group = "org.quiltmc"
version = "0.1.0"

repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDirs("src/generated")
		}
	}
}

// Configure Gradle IntelliJ Plugin
// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellij {
	version.set("2021.3")
	type.set("IC") // Target IDE Platform

	plugins.set([/* Plugin Dependencies */])
	plugins.addAll(findProperty("platformPlugins").split(","))
}

grammarKit {
	jflexRelease = "1.7.0-1"
	grammarKitRelease = "2021.1.2"
}

// Set the JVM compatibility versions
java {
	sourceCompatibility = "11"
	targetCompatibility = "11"
}

import org.jetbrains.grammarkit.tasks.GenerateLexerTask
import org.jetbrains.grammarkit.tasks.GenerateParserTask

task generateEnigmaLexer(type: GenerateLexerTask) {
	source = "src/main/java/org/quiltmc/intellij/enigma/language/_EnigmaMappingLexer.flex"
	targetDir = "src/generated/org/quiltmc/intellij/enigma/language/"
	targetClass = "EnigmaMappingLexer.java"
}

task generateEnigmaParser(type: GenerateParserTask) {
	source = "src/main/java/org/quiltmc/intellij/enigma/language/EnigmaMapping.bnf"
	targetRoot = "src/generated/"
	pathToParser = "org/quiltmc/intellij/enigma/language/EnigmaMappingParser.java"
	pathToPsiRoot = "org/quiltmc/intellij/enigma/language/psi/"
}

task generateCode {
	finalizedBy generateLexer, generateParser, generateEnigmaLexer, generateEnigmaParser
}

tasks {
	patchPluginXml {
		sinceBuild.set("213")
		untilBuild.set("223.*")
	}

	signPlugin {
		certificateChain.set(System.getenv("CERTIFICATE_CHAIN"))
		privateKey.set(System.getenv("PRIVATE_KEY"))
		password.set(System.getenv("PRIVATE_KEY_PASSWORD"))
	}

	publishPlugin {
		token.set(System.getenv("PUBLISH_TOKEN"))
	}

	generateLexer {
		source = "src/main/java/org/quiltmc/intellij/mapping/language/QuiltMapping.flex"
		targetDir = "src/generated/org/quiltmc/intellij/mapping/language/"
		targetClass = "QuiltMappingLexer.java"
	}

	generateParser {
		source = "src/main/java/org/quiltmc/intellij/mapping/language/QuiltMapping.bnf"
		targetRoot = "src/generated/"
		pathToParser = "org/quiltmc/intellij/mapping/language/QuiltMappingParser.java"
		pathToPsiRoot = "org/quiltmc/intellij/mapping/language/psi/"
	}

	// TODO: Find a way to exclude a source directory
	checkLicenseMain {
		enabled false
	}
}
