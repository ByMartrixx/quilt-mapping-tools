{
  parserClass = 'org.quiltmc.intellij.enigma.language.parser.EnigmaMappingParser'

  extends = 'com.intellij.extapi.psi.ASTWrapperPsiElement'

    psiClassPrefix = 'EnigmaMapping'
    psiImplClassSuffix = 'Impl'
    psiPackage = 'org.quiltmc.intellij.enigma.language.psi'
    psiImplPackage = 'org.quiltmc.intellij.enigma.language.psi.impl'

    elementTypeHolderClass = 'org.quiltmc.intellij.enigma.language.psi.EnigmaMappingTypes'
    elementTypeClass = 'org.quiltmc.intellij.enigma.language.psi.EnigmaMappingElementType'
    tokenTypeClass = 'org.quiltmc.intellij.enigma.language.psi.EnigmaMappingTokenType'

    tokens = [
      NEW_LINE = "regexp:\r?\n"
      WHITE_SPACE = "regexp:[ \t]+"

      CLASS_KEYWORD = "CLASS"
      FIELD_KEYWORD = "FIELD"
      METHOD_KEYWORD = "METHOD"
      ARG_KEYWORD = "ARG"
      COMMENT_KEYWORD = "COMMENT"
    ]
}

root ::= clazz [ ln ]

clazz ::= 'CLASS' [ class-children ]
private class-children ::= (ln comment)* (ln class-member)*
private class-member ::= field | method | clazz

field ::= 'FIELD' (ln comment)*

method ::= 'METHOD' (ln comment)* (ln arg)*

arg ::= 'ARG' (ln comment)*

comment ::= 'COMMENT'

private ln ::= 'regexp:\r?\n'
